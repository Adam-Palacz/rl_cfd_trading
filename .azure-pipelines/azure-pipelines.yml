name: ML Workspace Infrastructure - $(date:yyyyMMdd)

trigger:
  - main

parameters:
  - name: buildMLWorkspace
    type: boolean
    default: false

variables:
  - group: terraform-backend-config

stages:
- stage: BuildInfra
  condition: ${{ parameters.buildMLWorkspace }}
  jobs:
  - job: BuildInfrastructure
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTaskV4@4
      displayName: "Terraform Init"
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'ado_ml'
        backendAzureRmResourceGroupName: '$(backend_resource_group_name)'
        backendAzureRmStorageAccountName: '$(backend_storage_account_name)'
        backendAzureRmContainerName: '$(backend_container_name)'
        backendAzureRmKey: 'terraform.tfstate'
        workingDirectory: 'IaC'

    # - task: TerraformTaskV4@4
    #   displayName: 'Terraform Plan'
    #   inputs:
    #     provider: 'azurerm'
    #     command: 'plan'
    #     workingDirectory: 'IaC'
    #     environmentServiceNameAzureRM: 'ado_ml'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'ado_ml'
        scriptType: 'bash'
        workingDirectory: 'IaC'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Set environment variables for Terraform
          export ARM_CLIENT_ID=$(az account show --query id -o tsv)
          export ARM_CLIENT_SECRET=$(az account show --query password -o tsv)
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)
          
          # Initialize Terraform
          terraform init
          
          # Run Terraform plan
          terraform plan -out=tfplan

  - job: WaitForValidation
    displayName: 'Wait for validation'
    pool: server
    dependsOn: 
      - BuildInfrastructure
    timeoutInMinutes: 1440

    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440
      inputs:
        instructions: 'Verify TF plan'
        onTimeout: 'reject'

  - job: ApplyTerraform
    displayName: 'Apply terraform code'
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: 
      - BuildInfrastructure
      - WaitForValidation
    condition: and(succeeded('BuildInfrastructure'), succeeded('WaitForValidation'))
    steps:
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'IaC'
        environmentServiceName: 'ado_ml'